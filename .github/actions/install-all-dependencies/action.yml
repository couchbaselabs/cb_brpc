runs:
  using: "composite"
  steps:
    - uses: ./.github/actions/install-essential-dependencies
    - run: sudo apt-get install -y libunwind-dev libgoogle-glog-dev automake bison flex libboost-all-dev libevent-dev libtool pkg-config  libibverbs1 libibverbs-dev
      shell: bash
    - run: | 
        wget https://archive.apache.org/dist/thrift/0.11.0/thrift-0.11.0.tar.gz && tar -xf thrift-0.11.0.tar.gz && cd thrift-0.11.0/
        ./configure --prefix=/usr --with-rs=no --with-ruby=no --with-python=no --with-java=no --with-go=no --with-perl=no --with-php=no --with-csharp=no --with-erlang=no --with-lua=no --with-nodejs=no --with-haskell=no --with-dotnetcore=no CXXFLAGS="-Wno-unused-variable"
        make -j ${{env.proc_num}} && sudo make install
      shell: bash
    - run: |
        git clone https://github.com/abseil/abseil-cpp.git && cd abseil-cpp && git checkout lts_2022_06_23
        cmake -DBUILD_TESTING=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_POLICY_VERSION_MINIMUM=3.5 .
        make -j ${{env.proc_num}} && sudo make install
      shell: bash
    - run: |
        git clone https://github.com/couchbase/couchbase-cxx-client.git && cd couchbase-cxx-client
        echo -e '\ninstall(DIRECTORY couchbase/ DESTINATION include/couchbase)\ninstall(TARGETS couchbase_cxx_client DESTINATION lib)' | sudo tee -a CMakeLists.txt
        mkdir build && cd build
        cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release ..
        make -j ${{env.proc_num}} && sudo make install
      shell: bash
    - run: |
        git clone https://github.com/fmtlib/fmt.git && cd fmt
        mkdir build && cd build
        cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=TRUE .. 
        make -j ${{env.proc_num}} && sudo make install
      shell: bash
    - run: |
        git clone https://github.com/taocpp/PEGTL.git
        cd PEGTL
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j ${{env.proc_num}}
        sudo make install
      shell: bash
    - run: |
        git clone https://github.com/taocpp/json.git
        cd json/include
        sudo cp -dr tao /usr/include
      shell: bash